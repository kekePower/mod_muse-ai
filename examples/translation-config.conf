# Apache Configuration for mod_muse-ai Translation System
# This configuration enables language-prefixed URLs like /es/page.ai, /fr/docs/file.ai

# Load the mod_muse_ai module
LoadModule muse_ai_module modules/mod_muse_ai.so

# Enable mod_rewrite for URL processing
LoadModule rewrite_module modules/mod_rewrite.so

<VirtualHost *:80>
    ServerName example.com
    DocumentRoot /var/www/html
    
    # Basic mod_muse_ai configuration
    MuseAiApiKey "your-api-key-here"
    MuseAiEndpoint "https://api.openai.com/v1"
    MuseAiModel "gpt-4.1-nano"
    MuseAiMaxTokens 2000
    MuseAiPromptsDir "/etc/apache2/muse-prompts"
    
    # Enable URL rewriting for language prefixes
    RewriteEngine On
    
    # Language prefix rewrite rules
    # These rules handle URLs like /es/page.ai, /fr/docs/file.ai
    # The language detection is handled by mod_muse_ai internally
    
    # Rule 1: Handle language-prefixed .ai files
    # Pattern: /[2-3 letter language code]/path/to/file.ai
    # Example: /es/page.ai -> /page.ai (with language context preserved)
    RewriteRule ^/([a-z]{2,3})/(.+\.ai)$ /$2 [E=MUSE_LANG_PREFIX:$1,L]
    
    # Rule 2: Handle language-prefixed directories with .ai files
    # Pattern: /[language]/directory/ -> look for index.ai
    RewriteRule ^/([a-z]{2,3})/(.+/)$ /$2index.ai [E=MUSE_LANG_PREFIX:$1,L]
    
    # Rule 3: Handle root language prefix
    # Pattern: /[language]/ -> /index.ai
    RewriteRule ^/([a-z]{2,3})/?$ /index.ai [E=MUSE_LANG_PREFIX:$1,L]
    
    # Alternative approach: Use mod_muse_ai's internal language detection
    # This approach lets mod_muse_ai handle all language processing internally
    # without URL rewriting (recommended for most setups)
    
    # Configure mod_muse_ai to handle .ai files
    <FilesMatch "\.ai$">
        SetHandler muse-ai-handler
        
        # Optional: Set default language for fallback
        SetEnv MUSE_DEFAULT_LANG "en_US"
        
        # Optional: Enable language detection logging
        SetEnv MUSE_LANG_DEBUG "1"
    </FilesMatch>
    
    # Handle language-prefixed URLs directly with mod_muse_ai
    # This is the recommended approach as it's simpler and more robust
    <LocationMatch "^/[a-z]{2,3}/.+\.ai$">
        SetHandler muse-ai-handler
    </LocationMatch>
    
    # Optional: Redirect root language URLs to include trailing slash
    # /es -> /es/
    RewriteRule ^/([a-z]{2,3})$ /$1/ [R=301,L]
    
    # Optional: Handle language switching
    # Redirect /switch-lang?to=es&return=/page.ai to /es/page.ai
    RewriteCond %{QUERY_STRING} ^to=([a-z]{2,3})&return=(.+)$
    RewriteRule ^/switch-lang$ /%1/%2? [R=302,L]
    
    # Security: Prevent access to internal prompt files
    <Directory "/etc/apache2/muse-prompts">
        Require all denied
    </Directory>
    
    # Optional: Custom error pages for unsupported languages
    ErrorDocument 400 /error/unsupported-language.html
    
    # Logging for debugging
    LogLevel info
    CustomLog logs/muse_ai_access.log combined
    ErrorLog logs/muse_ai_error.log
</VirtualHost>

# Alternative configuration using Directory directives
# This approach is useful if you want to organize content by language
<VirtualHost *:80>
    ServerName multilingual.example.com
    DocumentRoot /var/www/multilingual
    
    # Basic mod_muse_ai configuration
    MuseAiApiKey "your-api-key-here"
    MuseAiEndpoint "https://api.openai.com/v1"
    MuseAiModel "gpt-4.1-nano"
    MuseAiMaxTokens 2000
    
    # Language-specific directories
    # Structure: /var/www/multilingual/es/, /var/www/multilingual/fr/, etc.
    
    <Directory "/var/www/multilingual/*/"> 
        # Handle .ai files in language directories
        <FilesMatch "\.ai$">
            SetHandler muse-ai-handler
        </FilesMatch>
        
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>
    
    # Fallback to English for unsupported languages
    RewriteEngine On
    RewriteCond %{REQUEST_URI} ^/([a-z]{2,3})/
    RewriteCond %{DOCUMENT_ROOT}/%1 !-d
    RewriteRule ^/[a-z]{2,3}/(.*)$ /en/$1 [R=302,L]
</VirtualHost>

# SSL/HTTPS Configuration Example
<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName secure.example.com
    DocumentRoot /var/www/html
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /path/to/certificate.crt
    SSLCertificateKeyFile /path/to/private.key
    
    # mod_muse_ai configuration
    MuseAiApiKey "your-api-key-here"
    MuseAiEndpoint "https://api.openai.com/v1"
    MuseAiModel "gpt-4.1-nano"
    MuseAiMaxTokens 2000
    MuseAiPromptsDir "/etc/apache2/muse-prompts"
    
    # Language handling
    <FilesMatch "\.ai$">
        SetHandler muse-ai-handler
    </FilesMatch>
    
    <LocationMatch "^/[a-z]{2,3}/.+\.ai$">
        SetHandler muse-ai-handler
    </LocationMatch>
    
    # Security headers for API requests
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
</VirtualHost>
</IfModule>

# Global configuration for all virtual hosts
<IfModule mod_muse_ai.c>
    # Global defaults
    MuseAiTimeout 30
    MuseAiRetries 3
    MuseAiDebug Off
    
    # Translation-specific settings
    MuseAiTranslationFallback "en_US"
    MuseAiLanguageCookie "muse_lang"
    MuseAiLanguageCookieMaxAge 86400
</IfModule>
